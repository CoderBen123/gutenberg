// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`recordToDom should create a value with formatting 1`] = `
<body>
  <em
    data-rich-text-format-boundary="true"
  >
    test
  </em>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create a value with formatting for split tags 1`] = `
<body>
  <em
    data-rich-text-format-boundary="true"
  >
    test
  </em>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create a value with formatting with attributes 1`] = `
<body>
  <a
    data-rich-text-format-boundary="true"
    href="#"
  >
    test
  </a>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create a value with image object 1`] = `
<body>
  <img
    src=""
  />
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create a value with image object and formatting 1`] = `
<body>
  <em>
    <img
      src=""
    />
    
  </em>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create a value with image object and text after 1`] = `
<body>
  <em>
    <img
      src=""
    />
    te
  </em>
  st
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create a value with image object and text before 1`] = `
<body>
  te
  <em>
    st
    <img
      src=""
    />
    
  </em>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create a value with nested formatting 1`] = `
<body>
  <em>
    <strong
      data-rich-text-format-boundary="true"
    >
      test
    </strong>
  </em>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create a value without formatting 1`] = `
<body>
  test
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create an empty value 1`] = `
<body>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should create an empty value from empty tags 1`] = `
<body>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should filter format boundary attributes 1`] = `
<body>
  <strong
    data-rich-text-format-boundary="true"
  >
    test
  </strong>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should handle br 1`] = `
<body>
  
  <br />
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should handle br with formatting 1`] = `
<body>
  <em
    data-rich-text-format-boundary="true"
  >
    
    <br />
    
  </em>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should handle br with text 1`] = `
<body>
  te
  <br />
  st
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should handle double br 1`] = `
<body>
  a
  <br />
  
  <br />
  b
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should handle empty list value 1`] = `
<body>
  <li>
    
    <br
      data-rich-text-padding="true"
    />
  </li>
</body>
`;

exports[`recordToDom should handle empty multiline value 1`] = `
<body>
  <p>
    
    <br
      data-rich-text-padding="true"
    />
  </p>
</body>
`;

exports[`recordToDom should handle middle empty list value 1`] = `
<body>
  <li>
    
    <br
      data-rich-text-padding="true"
    />
    
  </li>
  <li>
    
    <br
      data-rich-text-padding="true"
    />
    
  </li>
  <li>
    
    <br
      data-rich-text-padding="true"
    />
  </li>
</body>
`;

exports[`recordToDom should handle multiline list value 1`] = `
<body>
  <li>
    one
    <br
      data-rich-text-padding="true"
    />
    <ul>
      <li>
        a
        <br
          data-rich-text-padding="true"
        />
        
      </li>
      <li>
        b
        <br
          data-rich-text-padding="true"
        />
        <ol>
          <li>
            1
            <br
              data-rich-text-padding="true"
            />
            
          </li>
          <li>
            2
            <br
              data-rich-text-padding="true"
            />
            
          </li>
        </ol>
      </li>
    </ul>
  </li>
  <li>
    three
    <br
      data-rich-text-padding="true"
    />
  </li>
</body>
`;

exports[`recordToDom should handle multiline value 1`] = `
<body>
  <p>
    one
    <br
      data-rich-text-padding="true"
    />
    
  </p>
  <p>
    two
    <br
      data-rich-text-padding="true"
    />
  </p>
</body>
`;

exports[`recordToDom should handle multiline value with element selection 1`] = `
<body>
  <li>
    one
    <br
      data-rich-text-padding="true"
    />
  </li>
</body>
`;

exports[`recordToDom should handle multiline value with empty 1`] = `
<body>
  <p>
    one
    <br
      data-rich-text-padding="true"
    />
    
  </p>
  <p>
    
    <br
      data-rich-text-padding="true"
    />
  </p>
</body>
`;

exports[`recordToDom should handle nested empty list value 1`] = `
<body>
  <li>
    
    <br
      data-rich-text-padding="true"
    />
    <ul>
      <li>
        
        <br
          data-rich-text-padding="true"
        />
      </li>
    </ul>
  </li>
</body>
`;

exports[`recordToDom should handle selection before br 1`] = `
<body>
  a
  <br />
  
  <br />
  b
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should ignore formats at line separator 1`] = `
<body>
  <p>
    <em>
      one
      <br
        data-rich-text-padding="true"
      />
      
    </em>
  </p>
  <p>
    <em>
      two
    </em>
    
    <br
      data-rich-text-padding="true"
    />
  </p>
</body>
`;

exports[`recordToDom should preserve emoji 1`] = `
<body>
  üçí
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should preserve emoji in formatting 1`] = `
<body>
  <em
    data-rich-text-format-boundary="true"
  >
    üçí
  </em>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should preserve non breaking space 1`] = `
<body>
  test¬† test
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should remove padding 1`] = `
<body>
  
  <br
    data-rich-text-padding="true"
  />
</body>
`;

exports[`recordToDom should replace characters to format HTML with space 1`] = `
<body>
   
  <br
    data-rich-text-padding="true"
  />
</body>
`;
